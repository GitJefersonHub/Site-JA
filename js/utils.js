// Retorna um emoji representando o clima com base na descri√ß√£o textual
export function getTemperatureFeelingIcon(temp) {
  const t = parseFloat(temp);
  if (t <= 10) return 'ü•∂';         // Muito frio
  if (t <= 18) return 'üß•';         // Frio
  if (t <= 26) return 'üôÇ';         // Agrad√°vel
  if (t <= 33) return 'ü•µ';         // Quente
  return 'üî•';                      // Muito quente
}

export function getUvIndexDescription(uv) {
  const uvValue = parseFloat(uv);
  if (isNaN(uvValue)) return 'üîç √çndice UV indispon√≠vel';

  if (uvValue < 3) return 'üü¢ Baixo';
  if (uvValue < 6) return 'üü° Moderado';
  if (uvValue < 8) return 'üü† Alto';
  if (uvValue < 11) return 'üî¥ Muito alto';
  return 'üü£ Extremo';
}

export function getWeatherIcon(description) {
  const desc = description.toLowerCase(); // Converte para min√∫sculas para facilitar a compara√ß√£o

  if (desc.includes('c√©u limpo')) return'‚òÄÔ∏è';              // Sol
  if (desc.includes('nublado') && !desc.includes('parcial')) return'‚òÅÔ∏è'; // Nublado total
  if (desc.includes('algumas nuvens') || desc.includes('parcial')) return'‚õÖ'; // Parcialmente nublado
  if (desc.includes('chuva leve')) return'üå¶Ô∏è';             // Chuva leve
  if (desc.includes('chuva') || desc.includes('tempestade')) return'üåßÔ∏è'; // Chuva forte ou tempestade
  if (desc.includes('neve')) return'‚ùÑÔ∏è';                   // Neve
  if (desc.includes('n√©voa') || desc.includes('neblina')) return'üå´Ô∏è'; // N√©voa ou neblina

  return'üå°Ô∏è'; // √çcone padr√£o para condi√ß√µes n√£o reconhecidas
}

// Formata um n√∫mero para ter sempre dois d√≠gitos (ex: 7 ‚Üí "07")
export const formatTwoDigits = value => 
  parseInt(value).toString().padStart(2, '0');
